library(readr)
Pre_2018_History <- read_csv("G:/ISU Google Drive/Home GD Home/Madness/2018/Pre 2018 History.csv")
View(Pre_2018_History)
setwd("G:/ISU Google Drive/Home GD Home/Madness/2018/2018 R")
Allgames <- read.csv("../Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
kable(Allgames)
library(mosaic)
library(DT)
library(knitr)
library(pander)
library(car)
library(plyr)
library(dplyr)
Allgames <- read.csv("../Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
kable(Allgames)
kable(head(Allgames))
setwd("G:/ISU Google Drive/Home GD Home/Madness/2018/2018 R")
library(mosaic)
library(DT)
library(knitr)
library(pander)
library(car)
library(plyr)
library(dplyr)
Allgames <- read.csv("../Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
kable(head(Allgames))
View(Allgames)
View(Allgames)
table(Round~wSeed, data=Allgames)
table(Allgames$Round,Allgames$wSeed)
table(Allgames$wSeed,Allgames$Round)
pander(table(Allgames$wSeed,Allgames$Round))
Allgames$Round<-as.factor(Allgames$Round)
Allgames$Round<-as.factor(Allgames$Round)
Allgames$Round<-factor(Allgames$Round, levels=c("Play-in", "64", "32","16","8","Final Four","Champ"))
pander(table(Allgames$wSeed,Allgames$Round))
pander(table(Allgames$wSeed,Allgames$Round),caption = "Wins by seed")
pander(table(as.factor(Allgames$wSeed),Allgames$Round),caption = "Wins by seed")
pander(daycare)
library(mosaic)
library(DT)
library(pander)
library(car)
library(plyr)
library(dplyr)
late <- read.csv("../Data/late.csv", header=TRUE)
#Show the full width of the "Wide" version of the late data:
pander(late, split.tables = Inf)
# This code reshapes the data into "long" format called Late.
# To get the "Late" dataset into your R Console,
# you need to click the green "play" arrow in
# the top right corner of this gray R-Chunk.
# Then type:
#   > View(Late)
# in your R Console
Late <- reshape(late,
varying = paste("Week",1:20, sep=""),
v.names = "NumLateParents",
timevar = "Week",
times = 1:20,
idvar = "Center",
new.row.names = 1:200,
direction = "long")
daycare<-Late
daycare$FinePeriod <- mapvalues(Late$Week ,1:20,c(rep("Before",4),rep("During",12),rep("After",4)))
daycare$FinePeriod<-as.factor(daycare$FinePeriod)
daycare$FinePeriod<-factor(daycare$FinePeriod, levels=c("Before", "During", "After"))
pander(daycare)
pander(tapply(daycare$NumLateParents, list(daycare$Treatment, daycare$FinePeriod), mean), caption = "The Mean Late Parents of All Six Groups")
pander(tapply(daycare$NumLateParents, list(daycare$Treatment, daycare$FinePeriod), sd), caption = "The Standard Deviation of Late Parents of All Six Groups")
DCAOV<-aov(NumLateParents~Treatment + FinePeriod + Treatment:FinePeriod, data = daycare)
par(mfrow=c(1,2))
plot(DCAOV, which=1:2, pch=16)
pander(DCAOV, caption = "(Two-Way) ANOVA results")
xyplot(NumLateParents~Treatment, data = daycare, type=c("p","a"), main="Significance of Treatment", col='blue')
xyplot(NumLateParents~FinePeriod, data = daycare, type=c("p","a"), main="Significance of Fine-Period")
#xyplot(NumLateParents~Treatment, data=daycare, groups=FinePeriod, type=c("p","a"), main="Significance of the Interaction", auto.key=list(corner=c(1,1)))
ggplot(data = daycare, aes(x = FinePeriod, y = NumLateParents)) + geom_point()  + aes(colour = Treatment) + labs(title = "The Number of Late Parents by Treatment and Fine Period") + stat_summary(fun.y = mean, geom = "line", size = 1.0, aes(color=Treatment, group=Treatment)) +labs(y="Number of Late Parents",x="Fine Period")+ theme(plot.title = element_text(hjust = 0.5))
pander(daycare)
pander(table(as.factor(Allgames$wSeed),Allgames$Round),caption = "Wins by seed")
pander(table(Allgames$wSeed,Allgames$Round),caption = "Wins by seed")
Allgames$wSeed<-as.factor(Allgames$wSeed)
Allgames$Round<-factor(Allgames$Round, levels=c("Play-in", "64", "32","16","8","Final Four","Champ"))
pander(table(Allgames$wSeed,Allgames$Round),caption = "Wins by seed")
str(Allgames)
table
library(mosaic)
library(DT)
library(knitr)
library(pander)
library(car)
library(plyr)
library(dplyr)
Movies31<-read.csv("./Data/movies31.csv", header=TRUE, stringsAsFactors = FALSE)
CPI <- read.csv("./Data/CPI1914to2017.csv", header=TRUE, stringsAsFactors = FALSE)
#write.csv(Movies31, file = "./Data/MoviesOut.csv")
# slim down to 4 ratings
mr4<-subset(Movies31, rating %in% c("G","PG","PG-13","R"), )
# movies G-rated and > $100 Mil
GoodFamily <- subset(Movies31, rating == "G" & gross >= 100000000)
# Change budget = 0 to budget = NA
Movies.wb <- Movies31
MB <- Movies.wb$budget
MB[MB == 0] <- NA
Movies.wb$budget <- MB
# Filter out budget = NA
Movies.wb <- subset(Movies.wb, !is.na(budget))
#re-sort columns
mycolumns<-c(15,9,7,2,5,8,10,3,1,6,4,13,11,12,14)
Movies.Sorted<-Movies31[mycolumns]
#re-sort rows
Movies.Sorted <- Movies.Sorted[order(Movies.Sorted$released),]
# Cut a Quantitative Variable into categories
Movies.Sorted$buster <- cut(Movies.Sorted$gross, breaks = c(0,100000,1000000,10000000,100000000,1000000000),
labels = c("Size 1","Size 2","Size 3","Size 4","Size 5"))
datatable(GoodFamily, extensions = "Responsive",options=list(lengthMenu = c(3,10,30)))
pander::pander(favstats(budget~country, data = GoodFamily))
GbyC<-favstats(budget~country, data = GoodFamily)
knitr::kable(GbyC)
pander::pander(sum(budget~country, data = GoodFamily))
Movies31$year <- as.factor(Movies31$year)
Movies31$year <- as.integer(as.character(Movies31$year))
Movies.Sorted[5:6] <- lapply(Movies.Sorted[5:6], function(x) as.factor(x))
movies2017<-merge(Movies.wb,CPI, by.x = "year", by.y = "Year", all.x = TRUE)
movies2017$Newbudget<-movies2017$budget*movies2017$Factor
cbust<-table(Movies.Sorted$buster)
barplot( cbust, col=c("gray84","gray44") ,beside=TRUE , legend.text=TRUE )
mscore<-median(score~buster, data = Movies.Sorted)
barplot(mscore, col=c("blue","gold") ,beside=TRUE , legend.text=TRUE )
Movies.Sorted$rating <- as.character(Movies.Sorted$rating)
mrs4<-subset(Movies.Sorted, rating %in% c("G","PG","PG-13","R"), )
counts <- table(mrs4$rating, mrs4$buster)
barplot(counts, main="Movie Distribution \nby Rating and Blockbuster Size", xlab = "Blockbuster size", col = c("darkblue","red","orange","green"), legend = rownames(counts), beside=TRUE)
Smovie<-subset(mr4, genre %in% c("Comedy","Action","Drama"))
pander(table(Smovie$genre,Smovie$rating))
GoodFamily$budget <- as.integer(GoodFamily$budget)
plot(gross~budget, data = GoodFamily, xlab="Movie Budget", ylab="Gross Revenue", col="gray", pch=19,
main="G-Rated High Grossing Movies\n1986 through 2016")
abline(lm(gross~budget, data = GoodFamily))
BestGF<-subset(GoodFamily, budget>=median(GoodFamily$budget))
points(gross~budget, data = BestGF, col="steelblue", pch=8)
abline(v=median(GoodFamily$budget), lty=5, col="red", lwd=2)
hist(Movies.wb$budget, xlab="Budget in Dollars", col="orange", main="")
title("Reported Budgets for movies", line=2)
title("1986-2016", line=1)
boxplot(budget~rating, data=Movies.wb, ylab="MPAA Rating", xlab="Bugdet in Dollars",
col=c("gray","orangered"), main="",
horizontal=TRUE)
title("Reported Budgets for movies", line=2)
title("1986-2016", line=1)
stripchart(budget~genre, data=GoodFamily, method="stack" ,ylab="Genre", xlab="Budget in Dollars",
main="G-Rated High Grossing Movies\n and Their Budgets\n1986 through 2016", col="sienna", pch=16)
mrs4$R<-mrs4$rating
RTF <- mrs4$R
RTF[RTF != "R"] <- FALSE
RTF[RTF == "R"] <- TRUE
mrs4$R <- RTF
pander::pander(favstats(score~R, data = mrs4))
R<-subset(mrs4, R %in% TRUE)
notR<-subset(mrs4, R %in% FALSE)
par(mfrow=c(1,2))
qqPlot(R$score, xlab = "Ranked Z Scores", ylab = "IMDB Score", main = "R-rated Movies")
qqPlot(notR$score, xlab = "Ranked Z Scores", ylab = "IMDB Score", main = "non-R-rated Movies")
ttp<-t.test(R$score,notR$score, mu = 0, alternative = "greater", conf.level = 0.95)$p.value
tts<-t.test(R$score,notR$score, mu = 0, alternative = "greater", conf.level = 0.95)$statistic
ttdf<-t.test(R$score,notR$score, mu = 0, alternative = "greater", conf.level = 0.95)$parameter
U<-abs(tts)+1
L<-U*(-1)
tcv<-qt(.95, ttdf)
# Create data for the area to shade
TX<-seq(tts,U,.01)
cord.x <- c(tts,TX,U)
cord.y <- c(0,dt(TX,ttdf),0)
# Make a curve
curve(dt(x,ttdf), xlim=c(L,U), main="t-Test for the IMDB score of R-rated movies \ncompared to scores of other rated movies", xlab = "")
# Add the shaded area.
polygon(cord.x,cord.y,col='skyblue')
abline(v=tts, lty=5, col="red", lwd=2)
abline(v=tcv, lty=5, col="blue", lwd=2)
text(tcv,.39,"Critical Value", col="blue")
text(tts,.37,"Test Statistic", col="red")
pander(t.test(R$score,notR$score, mu = 0, alternative = "greater", conf.level = 0.95))
favstats(score~year, data = mrs4)
wilcox.test(score~rating, data = mrs4, subset = rating %in% c("R","G"))
t.test(score~rating, data = subset(mrs4, rating %in% c("R","G")))
counts <- table(mrs4$rating, mrs4$buster)
pander(table(Smovie$genre,Smovie$rating))
kable(Allgames$wSeed,Allgames$Round),caption = "Wins by seed"))
kable(Allgames$wSeed,Allgames$Round)
SH<-table(Allgames$wSeed,Allgames$Round)
rownames(SH)<-c(1:16)
SH
pander(SH)
kable(SH)
kable(as.table(SH)
kable(as.table(SH))
SH<-as.table(SH))
SH<-as.table(SH)
SH
kable(SH)
rownames(SH)<-c("Seed 1","Seed 2")
rownames(SH)<-c("Seed 1","Seed 2","Seed 3","Seed 4","Seed 5","Seed 6","Seed 7","Seed 8","Seed 9","Seed 10","Seed 11","Seed 12","Seed 13","Seed 14","Seed 15","Seed 16")
pander(SH,row.names()
pander(SH)
pander(SH)
library(mosaic)
library(DT)
library(knitr)
library(pander)
library(car)
library(plyr)
library(dplyr)
Allgames <- read.csv("../Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
datatable(Allgames, extensions = "Responsive",options=list(lengthMenu = c(10,25,68)))
Allgames$Round<-factor(Allgames$Round, levels=c("Play-in", "64", "32","16","8","Final Four","Champ"))
SH<-table(Allgames$wSeed,Allgames$Round)
rownames(SH)<-c("Seed 1","Seed 2","Seed 3","Seed 4","Seed 5","Seed 6","Seed 7","Seed 8","Seed 9","Seed 10","Seed 11","Seed 12","Seed 13","Seed 14","Seed 15","Seed 16")
pander(SH)
Allgames <- read.csv("../Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
library(mosaic)
library(DT)
library(knitr)
library(pander)
library(car)
library(plyr)
library(dplyr)
Allgames <- read.csv("../Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
datatable(Allgames, extensions = "Responsive",options=list(lengthMenu = c(10,25,68)))
Allgames$Round<-factor(Allgames$Round, levels=c("Play-in", "64", "32","16","8","Final Four","Champ"))
SH<-table(Allgames$wSeed,Allgames$Round)
rownames(SH)<-c("Seed 1","Seed 2","Seed 3","Seed 4","Seed 5","Seed 6","Seed 7","Seed 8","Seed 9","Seed 10","Seed 11","Seed 12","Seed 13","Seed 14","Seed 15","Seed 16")
pander(SH)
library(mosaic)
library(DT)
library(knitr)
library(pander)
library(car)
library(plyr)
library(dplyr)
Allgames <- read.csv("../Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
datatable(Allgames, extensions = "Responsive",options=list(lengthMenu = c(10,25,68)))
Allgames$Round<-factor(Allgames$Round, levels=c("Play-in", "64", "32","16","8","4","Champ"))
SH<-table(Allgames$wSeed,Allgames$Round)
rownames(SH)<-c("Seed 1","Seed 2","Seed 3","Seed 4","Seed 5","Seed 6","Seed 7","Seed 8","Seed 9","Seed 10","Seed 11","Seed 12","Seed 13","Seed 14","Seed 15","Seed 16")
pander(SH)
Allgames <- read.csv("./Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
# Chunk 1
library(mosaic)
library(DT)
library(knitr)
library(pander)
library(car)
library(plyr)
library(dplyr)
# Chunk 2
Allgames <- read.csv("./Pre 2018 History.csv",header=TRUE, stringsAsFactors = FALSE)
# Chunk 3
datatable(Allgames, extensions = "Responsive",options=list(lengthMenu = c(10,25,68)))
# Chunk 4
Allgames$Round<-factor(Allgames$Round, levels=c("Play-in", "64", "32","16","8","4","Champ"))
SH<-table(Allgames$wSeed,Allgames$Round)
rownames(SH)<-c("Seed 1","Seed 2","Seed 3","Seed 4","Seed 5","Seed 6","Seed 7","Seed 8","Seed 9","Seed 10","Seed 11","Seed 12","Seed 13","Seed 14","Seed 15","Seed 16")
pander(SH)
View(Allgames)
